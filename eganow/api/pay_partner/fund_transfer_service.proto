syntax = "proto3";

package eganow.api.pay_partner;

option go_package = "github.com/eganow/partners/api;pb";

import "eganow/api/pay_partner/common.proto";
import "eganow/api/pay_partner/fund_transfer_payload.proto";
import "google/api/annotations.proto";

// The fund transfer service definition.
service FundTransferSvc {
  rpc QrCreditTransaction(FundTransferRequest) returns (FundTransferResponse) {
    option (google.api.http) = {
      post: "/api/v1/qr/credit"
      body: "*"
    };
  }

  // Receive money from a customer.
  rpc CollectionDebitTransaction(FundTransferRequest) returns (FundTransferResponse) {
    option (google.api.http) = {
      post: "/api/v1/transactions/collection-debit"
      body: "*"
    };
  }

  // Send money to a customer.
  rpc PayoutCreditTransaction(FundTransferRequest) returns (FundTransferResponse) {
    option (google.api.http) = {
      post: "/api/v1/transactions/payout-credit"
      body: "*"
    };
  }

  // Query transaction status.
  rpc QueryTransactionStatus(StatusQueryRequest) returns (StatusQueryResponse) {
    option (google.api.http) = {
      post: "/api/v1/transactions/status"
      body: "*"
    };
  }

  // Remittance transfer funds.
  rpc RemittanceTransferFunds(RemittanceTransferRequest) returns (FundTransferResponse) {
    option (google.api.http) = {
      post: "/api/v1/remittance/transfer"
      body: "*"
    };
  }

  // MtnMomoTransactionCallback callback from the partner.
  rpc MtnMomoTransactionCallback(MtnMomoTransactionCallbackRequest) returns (PayPartnerEmpty) {
    option (google.api.http) = {
      post: "/api/v1/transactions/mtn-momo/callback"
      body: "*"
    };
  }

  rpc AtMoneyTransactionCallback(AtMoneyTransactionCallbackRequest) returns (PayPartnerEmpty) {
    option (google.api.http) = {
      post: "/api/v1/transactions/at-money/callback"
      body: "*"
    };
  }

  rpc ReverseTransaction(ReverseTransactionRequest) returns (WebServiceResponse) {
    option (google.api.http) = {
      post: "/api/v1/transactions/reverse"
      body: "*"
    };
  }

  // QRC
  rpc QrCreditTransactionWebService(QrCreditTransactionWebServiceRequest) returns (WebServiceResponse) {
    option (google.api.http) = {
      post: "/api/v1/qr/credit/web-service"
      body: "*"
    };
  }

  // REQUEST TO PAY
  rpc CollectionDebitTransactionWebService(CollectionDebitTransactionWebServiceRequest) returns (WebServiceResponse) {
    option (google.api.http) = {
      post: "/api/v1/transactions/rtp/callback"
      body: "*"
    };
  }

  // GhipssRTPTransactionCallback callback from the partner.
  rpc GhipssRTPTransactionCallback(GhipssRTPTransactionCallbackRequest) returns (PayPartnerEmpty) {
    option (google.api.http) = {
      post: "/api/v1/transactions/rtp/callback"
      body: "*"
    };
  }
}
